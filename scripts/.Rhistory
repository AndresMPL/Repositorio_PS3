centroides_biblio <- gCentroid(as(bibliotecas_geom$geometry, "Spatial"), byid = T)
leaflet() %>%
addTiles() %>%
addPolygons(data=bibliotecas_geom, color = "#D8152F", opacity = 1, popup = bibliotecas_geom$name)  %>%
addCircles(lng = centroides_biblio$x, lat = centroides_biblio$y, col = "#0000FF", opacity = 0.8, radius = 0.5)
##Museos----
museos <- bogota %>% add_osm_feature(key="tourism", value = "museum") %>% osmdata_sf()
museos_geom <- museos$osm_polygons %>% select(osm_id, name)
centroides_museos <- gCentroid(as(museos_geom$geometry, "Spatial"), byid = T)
leaflet() %>%
addTiles() %>%
addPolygons(data=museos_geom, color = "#002AFF", opacity = 1, popup = museos_geom$name)  %>%
addCircles(lng = centroides_museos$x, lat = centroides_museos$y, col = "#FF7F00", opacity = 0.8, radius = 0.5)
centroides_parques_d <- st_as_sf(centroides_parques, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_parques_d)
train_sf <- st_as_sf(train, coords = c("lon", "lat"))
st_crs(train_sf) <- 4326
centroides_parques_d <- st_as_sf(centroides_parques, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_parques_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_parque <- dist_min
train_sf$distancia_parque <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_parque <- st_area(parques_geom)
train$area_parque <- area_parque[posicion]
train$area_parque <- as.numeric(train$area_parque)
train_sf$area_parque <- area_parque[posicion]
train_sf$area_parque <- as.numeric(train_sf$area_parque)
glimpse(train)
imagen_2 <- ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "darkblue") +
labs(x = "Distancia mínima a un parque (log-scale)",
y = "Precio Inmueble (log-scale)",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "darkblue") +
labs(x = "Distancia mínima a un parque (log-scale)",
y = "Precio Inmueble (log-scale)",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplot(train, aes(x = area_parque, y = price)) +
geom_point(col = "darkblue", alpha = 0.4) +
labs(x = "Área del parque más cercano (log-scale)",
y = "Precio del inmueble (log-scale)",
title = "Relación entre área de un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
?scales
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3") +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Personal consumption expenditures",
breaks = scales::breaks_extended(8),
labels = scales::label_dollar()) +
theme_bw()
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3") +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Personal consumption expenditures",
breaks = scales::breaks_extended(8),
labels = scales::label_number()) +
theme_bw()
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3") +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Personal consumption expenditures",
labels = scales::label_number()) +
theme_bw()
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3") +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Frecuencia",
labels = scales::label_comma()) +
theme_bw()
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3") +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Frecuencia",
labels = scales::label_number_auto()) +
theme_bw()
ggplot(data = train, mapping = aes(x = price))
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3")
?after_stat
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y = after_stat(count), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3")
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y = after_stat(count), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3"))
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y = after_stat(count),color="#424242", fill="#E3E3E3"))
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y = after_stat(count),color="#424242", fill="#E3E3E3")) +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Frecuencia",
labels = scales::label_comma()) +
theme_bw()
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(count)))
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(count))) +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3")
ggplot(data = train, mapping = aes(x = price))  +
geom_histogram(aes(y =after_stat(count))) +
geom_histogram(aes(y =after_stat(density)), bins = 15, position = 'identity', color="#424242", fill="#E3E3E3") +
stat_function(fun = dnorm, xlim = c(min(train$price), max(train$price)), colour="#1C86EE", linewidth=1,
args = list(mean = mean(train$price),
sd = sd(train$price))) +
labs(title = 'Distribución de los precios de venta',
x = 'Precio de Venta',
y = 'Frecuencia') +
scale_x_continuous(labels = label_number()) +
scale_y_continuous("Frecuencia",
labels = scales::label_number()) +
theme_bw()
ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "#6C7B8B") +
labs(x = "Distancia mínima a un parque (log-scale)",
y = "Precio Inmueble (log-scale)",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_1 <- ggplot(train, aes(x = distancia_parque)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque metros", y = "Cantidad",
title = "Distribución de la distancia a los parquees") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque (log-scale)",
y = "Precio Inmueble (log-scale)",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del parque más cercano (log-scale)",
y = "Precio del inmueble (log-scale)",
title = "Relación entre área de un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_3
centroides_mall_d <- st_as_sf(centroides_mall, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_mall_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_mall <- dist_min
train_sf$distancia_mall <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_mall <- st_area(malls_geom)
area_mall <- st_area(mall_geom)
train$area_mall <- area_mall[posicion]
train$area_mall <- as.numeric(train$area_mall)
train_sf$area_mall <- area_mall[posicion]
train_sf$area_mall <- as.numeric(train_sf$area_mall)
imagen_1 <- ggplot(train, aes(x = distancia_mall)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un mall metros", y = "Cantidad",
title = "Distribución de la distancia a los malles") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_mall, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un mall (log-scale)",
y = "Precio Inmueble (log-scale)",
title = "Relación entre la proximidad a un mall y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_mall, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del mall más cercano (log-scale)",
y = "Precio del inmueble (log-scale)",
title = "Relación entre área de un mall y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_3
centroides_salud_d <- st_as_sf(centroides_salud, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_salud_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_mall <- dist_min
train_sf$distancia_mall <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_mall <- st_area(salud_geom)
train$area_mall <- area_mall[posicion]
train$area_mall <- as.numeric(train$area_mall)
train_sf$area_mall <- area_mall[posicion]
train_sf$area_mall <- as.numeric(train_sf$area_mall)
imagen_1 <- ggplot(train, aes(x = distancia_mall)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un mall metros", y = "Cantidad",
title = "Distribución de la distancia a los malles") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_mall, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un mall (log-scale)",
y = "Precio Inmueble (log-scale)",
title = "Relación entre la proximidad a un mall y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_mall, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del mall más cercano (log-scale)",
y = "Precio del inmueble (log-scale)",
title = "Relación entre área de un mall y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
imagen_3
ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_log10() +
scale_y_log10(labels = scales::dollar) +
theme_bw()
ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
ggplot(train, aes(x = area_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del parque más cercano (log-scale)",
y = "Precio del inmueble (log-scale)",
title = "Relación entre área de un parque y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
train_sf <- st_as_sf(train, coords = c("lon", "lat"))
st_crs(train_sf) <- 4326
##Parques----
centroides_parques_d <- st_as_sf(centroides_parques, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_parques_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_parque <- dist_min
train_sf$distancia_parque <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_parque <- st_area(parques_geom)
train$area_parque <- area_parque[posicion]
train$area_parque <- as.numeric(train$area_parque)
train_sf$area_parque <- area_parque[posicion]
train_sf$area_parque <- as.numeric(train_sf$area_parque)
imagen_1 <- ggplot(train, aes(x = distancia_parque)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque metros", y = "Cantidad",
title = "Distribución de la distancia a los parquees") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un parque",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un parque y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_parque, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del parque más cercano",
y = "Precio del inmueble",
title = "Relación entre área de un parque y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_3
##Paradas de buses----
##Centros Comerciales----
centroides_mall_d <- st_as_sf(centroides_mall, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_mall_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_mall <- dist_min
train_sf$distancia_mall <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_mall <- st_area(mall_geom)
train$area_mall <- area_mall[posicion]
train$area_mall <- as.numeric(train$area_mall)
train_sf$area_mall <- area_mall[posicion]
train_sf$area_mall <- as.numeric(train_sf$area_mall)
imagen_1 <- ggplot(train, aes(x = distancia_mall)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un mall metros", y = "Cantidad",
title = "Distribución de la distancia a los malles") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_mall, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un mall",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un mall y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_mall, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del mall más cercano",
y = "Precio del inmueble",
title = "Relación entre área de un mall y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_3
##Estaciones de Transmilenio----
##Centros Médicos----
centroides_salud_d <- st_as_sf(centroides_salud, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_salud_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_salud <- dist_min
train_sf$distancia_salud <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_salud <- st_area(salud_geom)
train$area_salud <- area_salud[posicion]
train$area_salud <- as.numeric(train$area_salud)
train_sf$area_salud <- area_salud[posicion]
train_sf$area_salud <- as.numeric(train_sf$area_salud)
imagen_1 <- ggplot(train, aes(x = distancia_salud)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un salud metros", y = "Cantidad",
title = "Distribución de la distancia a los saludes") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_salud, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un salud",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un salud y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_salud, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del salud más cercano",
y = "Precio del inmueble",
title = "Relación entre área de un salud y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_3
##Seguridad----
centroides_seguridad_d <- st_as_sf(centroides_seguridad, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_seguridad_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_seguridad <- dist_min
train_sf$distancia_seguridad <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_seguridad <- st_area(seguridad_geom)
train$area_seguridad <- area_seguridad[posicion]
train$area_seguridad <- as.numeric(train$area_seguridad)
train_sf$area_seguridad <- area_seguridad[posicion]
train_sf$area_seguridad <- as.numeric(train_sf$area_seguridad)
imagen_1 <- ggplot(train, aes(x = distancia_seguridad)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un seguridad metros", y = "Cantidad",
title = "Distribución de la distancia a los seguridades") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_seguridad, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un seguridad",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un seguridad y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_seguridad, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del seguridad más cercano",
y = "Precio del inmueble",
title = "Relación entre área de un seguridad y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_3
##Bibliotecas----
centroides_biblio_d <- st_as_sf(centroides_biblio, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_biblio_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_biblio <- dist_min
train_sf$distancia_biblio <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_biblio <- st_area(bibliotecas_geom)
train$area_biblio <- area_biblio[posicion]
train$area_biblio <- as.numeric(train$area_biblio)
train_sf$area_biblio <- area_biblio[posicion]
train_sf$area_biblio <- as.numeric(train_sf$area_biblio)
imagen_1 <- ggplot(train, aes(x = distancia_biblio)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un biblio metros", y = "Cantidad",
title = "Distribución de la distancia a los biblioes") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_biblio, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un biblio",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un biblio y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_biblio, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del biblio más cercano",
y = "Precio del inmueble",
title = "Relación entre área de un biblio y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_3
##Museos----
centroides_museos_d <- st_as_sf(centroides_museos, coords = c("x", "y"))
dist_matrix <- st_distance(x = train_sf, y = centroides_museos_d)
dist_min <- apply(dist_matrix, 1, min)
train$distancia_museo <- dist_min
train_sf$distancia_museo <- dist_min
posicion <- apply(dist_matrix, 1, function(x) which(min(x) == x))
area_museo <- st_area(museos_geom)
train$area_museo <- area_museo[posicion]
train$area_museo <- as.numeric(train$area_museo)
train_sf$area_museo <- area_museo[posicion]
train_sf$area_museo <- as.numeric(train_sf$area_museo)
imagen_1 <- ggplot(train, aes(x = distancia_museo)) +
geom_histogram(bins = 50, fill = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un museo metros", y = "Cantidad",
title = "Distribución de la distancia a los museoes") +
theme_bw()
imagen_1
imagen_2 <- ggplot(train, aes(x = distancia_museo, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Distancia mínima a un museo",
y = "Precio Inmueble",
title = "Relación entre la proximidad a un museo y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_2
imagen_3 <- ggplot(train, aes(x = area_museo, y = price)) +
geom_point(col = "#6C7B8B", alpha = 0.4) +
labs(x = "Área del museo más cercano",
y = "Precio del inmueble",
title = "Relación entre área de un museo y el precio del inmueble") +
scale_x_continuous() +
scale_y_continuous(labels = scales::dollar) +
theme_bw()
imagen_3
glimpse(train)
