train <-  kNN(train, variable = c("surface_total", "surface_covered", "bedrooms", "bathrooms","rooms"), k = 6)
library(caret)
train <-  kNN(train, variable = c("surface_total", "surface_covered", "bedrooms", "bathrooms","rooms"), k = 6)
library(class)
train <-  kNN(train, variable = c("surface_total", "surface_covered", "bedrooms", "bathrooms","rooms"), k = 6)
#Imputamos las variables surface_total, surfaced_covered, bedrooms, bathrooms, rooms
p_load(ggplot2, boot, lessR, readr, readxl, ggplot2, ggthemes, VIM, tidyverse, rvest, heatmaply, plyr, dplyr, stargazer, knitr, kableExtra, here, jtools, ggstance, broom, broom.mixed, skimr, tydir, zoo, psych, lubridate)
p_load(tidyverse, rio, sf, dplyr, osmdata, leaflet, scales, stargazer,rstudioapi,
rio, plotly, modeldata, rgeos, tmaptools, IRdisplay, spatialsample, geojsonio)
library(pacman)
p_load(tidyverse, rio, sf, dplyr, osmdata, leaflet, scales, stargazer,rstudioapi,
rio, plotly, modeldata, rgeos, tmaptools, IRdisplay, spatialsample, geojsonio)
rm(list=ls())
test   <- import("https://raw.githubusercontent.com/AndresMPL/Repositorio_PS3/main/datasets/test.csv")
train  <- import("https://raw.githubusercontent.com/AndresMPL/Repositorio_PS3/main/datasets/train.csv")
glimpse(test)
glimpse(train) #Las dos BD de Train y Test tienen las mismas variables
train <- train %>% mutate(latp=lat,longp=lon, ln_price = log(price))
train <- sf::st_as_sf(train,coords=c('longp','latp'),crs = 4686)
class(train)
head(train)
sapply(train, function(x) sum(is.na(x))) %>% as.data.frame()  #Revisamos los NA de las variables
train <-  kNN(train, variable = c("surface_total", "surface_covered", "bedrooms", "bathrooms","rooms"), k = 6)
#Imputamos las variables surface_total, surfaced_covered, bedrooms, bathrooms, rooms
p_load(ggplot2, boot, lessR, readr, readxl, ggplot2, ggthemes, VIM, tidyverse, rvest, heatmaply, plyr, dplyr, stargazer, knitr, kableExtra, here, jtools, ggstance, broom, broom.mixed, skimr, tydir, zoo, psych, lubridate)
train <-  kNN(train, variable = c("surface_total", "surface_covered", "bedrooms", "bathrooms","rooms"), k = 6)
train$bedrooms
train <-  kNN(train, variable = c("bedrooms", "bathrooms","rooms"), k = 6)
train$bathrooms
train$rooms
train <-  kNN(train, variable = c("bedrooms", "bathrooms","rooms"), k = 6)
train <-  kNN(train, variable = c("bedrooms", "bathrooms","rooms"), k = 3)
train <-  kNN(train, variable "bedrooms", k = 3)
train <-  kNN(train, variable= "bedrooms", k = 3)
train <-  kNN(train, variable= c("bedrooms"), k = 3)
train <-  kNN(train, variable= c("bedrooms","bathrooms"), k = 3)
train <-  kNN(train, variable= c("surface_total"), k = 6)
train <-  kNN(train, variable= c("surface_covered"), k = 6)
train <-  kNN(train, variable= c("surface_total"), k = 6)
train <-  kNN(train, variable= "surface_total", k = 6)
test   <- import("https://raw.githubusercontent.com/AndresMPL/Repositorio_PS3/main/datasets/test.csv")
train  <- import("https://raw.githubusercontent.com/AndresMPL/Repositorio_PS3/main/datasets/train.csv")
glimpse(test)
glimpse(train) #Las dos BD de Train y Test tienen las mismas variables
train <- train %>% mutate(latp=lat,longp=lon, ln_price = log(price))
train <- sf::st_as_sf(train,coords=c('longp','latp'),crs = 4686)
class(train)
head(train)
train <-  kNN(train, variable= "surface_total", k = 6)
train$surface_total
filtro <- is.na(train$surface_total)
sum(filtro)
train$surface_total[filtro] <- mean(train$surface_total, na.rm = T)
filtro <- is.na(train$surface_covered) #Trasnsformamos los NA a ceros
sum(filtro)
train$surface_covered[filtro] <- mean(train$surface_covered, na.rm = T)
filtro <- is.na(train$bedrooms) #Trasnsformamos los NA a ceros #REVISAR
sum(filtro)
train$bedrooms[filtro] <- mean(train$bedrooms, na.rm = T)
train$bedrooms
filtro <- is.na(train$bathrooms) #Trasnsformamos los NA a ceros #REVISAR
sum(filtro)
train$bathrooms[filtro] <- mean(train$bathrooms, na.rm = T)
filtro <- is.na(train$rooms) #Trasnsformamos los NA a ceros #REVISAR
sum(filtro)
train$rooms[filtro] <- mean(train$rooms, na.rm = T)
filtro <- is.na(train$lat) | is.na(train$lon) #| is.na(train$rooms) | is.na(train$bathrooms) #| is.na(train$surface_total) | is.na(train$surface_covered)
train <- train[!filtro, ] #Filtramos los registros sin lat y lon
limites <- getbb("Bogota Colombia") #Aseguramos que sean inmuebles en Bogotá
filtro1 <- between(train$lon, limites[1, "min"], limites[1, "max"])
filtro2 <- between(train$lat, limites[2, "min"], limites[2, "max"])
filtro <- filtro1 & filtro2
train <- train[filtro,]
train <- train %>% mutate(area_maxima = ifelse(surface_total>surface_covered, surface_total, surface_covered)) #Seleccionamos el área máxima
sapply(train, function(x) sum(is.na(x))) %>% as.data.frame() #Revisamos los NA de las variables
prop.table(table(train$area_maxima == 0)) %>% as.data.frame() #Existen muchos lugares sin área (TRUE)
table(train$area_maxima == 0) %>% as.data.frame()
table(train$property_type) %>% as.data.frame() #Distribución entre Casas y Apartamentos
train$property_type <- as.factor(train$property_type) #Transformamos la variable de propiedad como factor
table(train$operation_type) %>% as.data.frame() #Validamos que todo corresponde a Venta
glimpse(train)
